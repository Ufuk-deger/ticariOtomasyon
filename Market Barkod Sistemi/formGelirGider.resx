<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB4
        CQAAAk1TRnQBSQFMAwEBAAEIAQABCAEAAS0BAAEtAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABtAMA
        AS0DAAEBAQABIAUAAZABfv8A/wD/AC0AAwEBAgMjASkDRgFQA1gBYwNlAXEDXwFqA1IBXQM2AT4DEQEV
        /wD/AKIAAwsBDgN6AYYDvgHHA/cB+SD/A90B4wOnAbEDQQFK/wD/AI4AAxYBGwPcAeID/AH9DP8DqAGy
        A14BaQM0ATwDGQEeAyUBLANCAUwDfgGKA88B1gz/A/IB9QOEAZD/AP8AfgADDAEPA8EByQj/A+IB5wNl
        AXEDAAEBKAADEAEUA7ABugPzAfYE/wP8Af0DSQFTAwIBA/8A/wBuAANNAVcD/AH9BP8DxwHPAzkBQjwA
        AwIBAwOAAYwD9wH5BP8DwQHJAxMBF/8A/wBmAAOhAawE/wPzAfYDTgFZAwABAUgAAwsBDgOhAawE/wP3
        AfkDKwEy/wD/AF4AA7oBwwT/A9wB4gMTARdXAAEBA1MBXgP9Af4D/QH+A0MBTf8A/wBWAAOjAa4E/wPw
        AfNkAAMuATYE/wP9Af4DJAEr/wD/AE4AA2wBdwT/A9cB3mwAAy8BNwT/A/MB9gMQART/AP8ARgADKQEw
        BP8D5QHqAwoBDXAAA1cBYgT/A8oB0gMCAQP/AP8AQgAD7gHxA/0B/gMsATQ4AAOgAaoDjAGYNwABAQOj
        Aa4E/wNXAWL/AP8APgADeQGFBP8DmQGkPAAE/wPdAeM4AAMKAQ0D9gH4A/0B/v8A/wA6AAMBAQID8QH0
        A/YB+AMAAQE8AAT/A90B4zwAA3oBhgT/A4MBj/8A/wA2AANjAW4E/wONAZlAAAT/A90B4z8AAQED8wH2
        A/IB9f8A/wA2AAPJAdEE/wMDAQRAAAT/A90B40AAA6QBrwT/A0IBTP8A/wAuAAMRARUD/QH+A+cB60QA
        BP8D3QHjQAADCwEOBP8DrQG3/wD/AC4AA0kBUwT/A2UBcUQABP8D3QHjRAAE/wPjAej/AP8ALgADhAGQ
        BP8DFAEYRAAE/wPdAeNEAAPUAdoE/wMUARj/AP8AKgADtwHABP8DCwEORAAE/wPdAeNEAAOAAYwE/wM2
        AT7/AP8AKgAD3gHkBP8DBAEGRAAE/wPdAeNEAANBAUsE/wNRAVv/AP8AKgAD8QH0BP8DAQECHAAD3QHj
        A90B4wPdAeMD3QHjA90B4wPdAeMD3QHjA90B4wPdAeMD3QHjBP8D+gH8A90B4wPdAeMD3QHjA90B4wPd
        AeMD3QHjA90B4wPdAeMD3QHjA4sBlxwAAygBLwT/A10BaP8A/wAqAAP5AfsE/wMAAQEcAFT/A6ABqhwA
        AxwBIgT/A2IBbf8A/wAqAAPnAesE/wMDAQREAAT/A90B40QAAzQBPAT/A1YBYf8A/wAqAAPOAdUE/wMH
        AQlEAAT/A90B40QAA10BaAT/A0UBT/8A/wAqAAOcAacE/wMPARNEAAT/A90B40QAA6oBtAT/AyMBKv8A
        /wAqAANoAXME/wMtATVEAAT/A90B40QABP8D/AH9AwMBBP8A/wAqAAMsATME/wOqAbREAAT/A90B40QA
        BP8DyAHQ/wD/AC4AAwEBAgPrAe8E/0QABP8D3QHjQAADUwFeBP8DfwGL/wD/ADIAA5sBpgT/AzEBOUAA
        BP8D3QHjQAAD4AHlA/wB/QMNARD/AP8AMgADGgEfBP8D4gHnQAAE/wPdAeM8AAMpATAD/QH+A94B5P8A
        /wA6AAPVAdsE/wM8AUU8AAT/A90B4zsAAQEDxAHNBP8DFgEb/wD/ADoAAxMBFwT/A94B5AMFAQc4AAT/
        A90B4zgAA04BWQT/A8kB0f8A/wBCAAOJAZQE/wOWAaF0AAMTARcD8gH1A/0B/gMPARL/AP8AQgADAwEE
        A94B5AT/A1ABWnAAA+AB5QT/A1QBX/8A/wBKAAMTARcD+gH8BP8DKAEvaAAD6wHvBP8DnQGo/wD/AFIA
        AywBMwP3AfkE/wNNAVdcAAMKAQ0DzwHWBP8DvAHF/wD/AFoAAy8BNwP8Af0E/wOPAZoDBgEIUAADKwEy
        A+EB5gT/A6sBtf8A/wBiAAMVARkD3gHkBP8D4AHlAzgBQUgAA5gBowP9Af4E/wN0AX//AP8AagADBAEF
        A4sBlwj/A94B5AM0ATw0AAMDAQQDkAGbA/IB9QT/A/EB9AMsATP/AP8AdgADDwETA9IB2QP9Af4I/wOw
        AboDLAE0Aw8BEwMIAQoDBAEFAwEEAgEDAwQBBgMLAQ4DFAEYA2UBcQPqAe4I/wPxAfQDdQGB/wD/AIYA
        AxUBGQOaAaUD7QHwLP8D/QH+A8sB0wNiAW0DAQEC/wD/AJIAAwMBBAM1AT0DbQF4A50BqAPPAdYD5AHp
        A/IB9QPuAfED3QHjA7gBwgOHAZMDVwFiAxoBH/8A/wD/AP8A/wD/AP8A/wAEAAFCAU0BPgcAAT4DAAEo
        AwABtAMAAS0DAAEBAQABAQUAATgBBBYAA/8BAAX/AfgSAAL/AcABHwH/AfgSAAH/Af4BAAEDAf8B+BIA
        Af8B+AIAAf8B+BIAAf8B4AE/AfABHwH4EgAB/wHBAf8B/AEPAfgSAAH/AYMC/wEHAfgSAAH/AQ8C/wGD
        AfgSAAH+AT8C/wHhAfgSAAH8AX8C/wHwAfgSAAH4AX8C/wH4AXgSAAH4Af8B/AH/AfgBeBIAAfEB/wH8
        Af8B/AF4EgAB4QH/AfwB/wH+ATgSAAHjAf8B/AH/Af4BOBIAAeMB/wH8Av8BGBIAAccB/wH8Av8BGBIA
        AccB/wH8Av8BmBIAAccB/wH8Av8BiBIAAccB/wH8Av8BiBIAAccB/wH8Av8BiBIAAccB8AIAAT8BiBIA
        AccB8AIAAT8BiBIAAccB/wH8Av8BiBIAAccB/wH8Av8BiBIAAccB/wH8Av8BiBIAAccB/wH8Av8BiBIA
        AccB/wH8Av8BmBIAAccB/wH8Av8BGBIAAeMB/wH8Av8BGBIAAeMB/wH8Af8B/gE4EgAB8QH/AfwB/wH8
        ATgSAAHwAf8B/AH/AfwBeBIAAfgD/wH4AXgSAAH4AX8C/wL4EgAB/AE/Av8B8QH4EgAB/gEfAv8BwwH4
        EgAB/wEHAv8BhwH4EgAB/wGDAv8BDwH4EgAB/wHAAf8B+AEfAfgSAAH/AfACAAF/AfgSAAH/AfwCAAH/
        AfgSAAL/AQABBwH/AfgSAAX/AfgSAAX/AfgSAAs=
</value>
  </data>
</root>